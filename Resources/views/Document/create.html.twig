{% extends 'ErichardDmsBundle::layout.html.twig' %}

{% block sidebar %}
  {% include 'ErichardDmsBundle:Node:_tree.html.twig' with {'nodes' : node.nodes} %}
{% endblock %}

{% block breacrumb %}
    {% for parent in node.path %}
        {% if loop.last %}
        <li class="active">
            {{ parent.name }}
        </li>
        {% else %}
        <li>
            <a href="{{ path('erichard_dms_node_list', {'node' : parent.slug }) }}">{{ parent.name }}</a><span class="divider">/</span>
        </li>
        {% endif %}
    {% endfor %}
{% endblock %}

{% block workspace %}

    <h1>Step 2 : Create document</h1>

    <form class="form-horizontal" action="{{ path('erichard_dms_create_document', {'node' : node.slug}) }}" method="POST" novalidate>
        {{ form_row(form.filename) }}
        {{ form_row(form.name, {'form_type': 'horizontal'}) }}

        {{ form_rest(form) }}

        <div class="form-actions">
          <button type="submit" class="btn btn-primary">Save changes</button>
          <button type="button" class="btn">Cancel</button>
        </div>
    </form>

{% endblock %}


{% block javascripts %}
    {{ parent() }}
    {% javascripts output="js/fine-uploader.js" filter="?yui_js"
        'bundles/ericharddms/libs/plupload/js/plupload.full.js'
        'bundles/ericharddms/libs/jquery.ui.progressbar.min.js'
    %}
        <script type="text/javascript" src="{{ asset_url }}"></script>
    {% endjavascripts %}

    <script type="text/javascript">
        $(function() {
            var uploader = new plupload.Uploader({
                runtimes : 'html5,flash',
                browse_button : 'pickfiles',
                multi_selection: false,
                container : 'uploader',
                max_file_size : '1gb',
                url : '{{ path('erichard_dms_upload_document') }}',
                flash_swf_url : '{{ asset('bundles/ericharddms/libs/plupload/js/plupload.flash.swf') }}',
            });

            $('#uploadfiles').click(function(e) {
                uploader.start();
                e.preventDefault();
            });

            uploader.init();

            uploader.bind('FilesAdded', function(up, files) {
                $.each(files, function(i, file) {
                    $('#filelist').append(
                      '<a class="btn remove" id="' + file.id + '">' + file.name + ' <i class="icon-remove-sign"></a>'
                    );
                });
                up.refresh(); // Reposition Flash/Silverlight
            });

            uploader.bind('QueueChanged', function(up) {
                $('#pickfiles').prop('disabled', true);

            });


            uploader.bind('Error', function(up, err) {
                alert("Error: " + err.code + ", Message: " + err.message + (err.file ? ", File: " + err.file.name : "") + "");
                up.refresh(); // Reposition Flash/Silverlight
            });

            $('#uploader').on('click', 'a.remove',  function(e) {
                uploader.removeFile(uploader.getFile(this.id));
                $('#'+this.id).remove();
                $('#pickfiles').prop('disabled', false);
                e.preventDefault();
            });

            uploader.bind('UploadProgress', function(up, file) {
                var progressBarValue = up.total.percent;
                $('#progressbar').progressbar({
                    value: progressBarValue
                });
                $('#progressbar .ui-progressbar-value').html('<span class="progressTooltip">' + up.total.percent + '%</span>');
            });

            uploader.bind('UploadComplete', function(up, files) {
                $('#upload-success').show();
                $('#filename').val(files[0].name);
            });

        });
    </script>
{% endblock %}

